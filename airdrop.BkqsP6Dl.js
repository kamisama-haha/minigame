import{a0 as o,m as i,A as e,a1 as c,n as T,S as n,p as l}from"./entry.BmXwiSXY.js";const d=o("airdrop",{state:()=>({tasks:[],balanceTickets:0,tonConnectUI:null,tonConnect:null,tonAddress:""}),actions:{getTaskName(t){switch(t){case e.INVITE_FRIENDS:return i().$i18n.t("airdrop.invite_friends",{n:5});case e.REACH_PROFIT_PER_HOUR:return i().$i18n.t("airdrop.reach_profit_per_hour",{value:"10k"});case e.REACH_LEVEL:return i().$i18n.t("airdrop.reach_level",{level:4});case e.SUBSCRIBE_TELEGRAM_CHANNEL:case e.CONNECT_TON_WALLET:return i().$i18n.t(`airdrop.${t}`,{network:"TON"});default:return i().$i18n.t("airdrop.task")}},async postListTasks(){return await c.post("/clicker/list-airdrop-tasks",{}).then(t=>(t!=null&&t.airdropTasks&&this.setTasks(t.airdropTasks),t!=null&&t.balanceTickets&&this.setBalanceTickets(t.balanceTickets),t)).catch(t=>{T.error({title:i().$i18n.t("messages.request_error"),message:i().$i18n.t("messages.no_airdrop_tasks")})})},async postCheckTask(t){return await c.post("/clicker/check-airdrop-task",{body:{...t}}).then(a=>(a!=null&&a.balanceTickets&&this.setBalanceTickets(a.balanceTickets),a))},async postDeleteWallet(){return await c.post("/clicker/delete-wallet",{}).then(t=>(t!=null&&t.balanceTickets&&this.setBalanceTickets(t.balanceTickets),t))},setTasks(t=[]){if(t.length){const a=localStorage.getItem(n.AIRDROP_TASKS);a?this.hashcode(t)!==Number(a)&&(l().taskAirdropNotification=!0):l().taskAirdropNotification=!0,this.tasks=t,localStorage.setItem(n.AIRDROP_TASKS,JSON.stringify(this.hashcode(t)))}},setBalanceTickets(t){this.balanceTickets=t},hashcode(t){let a=0;const s=JSON.stringify(t).replace(/\{|\"|\}|\:|,/g,""),k=s.length;for(let r=0;r<k;r++)a+=s.charCodeAt(r)*7;return a}}});export{d as u};
